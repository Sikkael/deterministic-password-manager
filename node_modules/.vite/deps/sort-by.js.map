{
  "version": 3,
  "sources": ["../../object-path/index.js", "../../sort-by/index.js"],
  "sourcesContent": ["(function (root, factory){\r\n  'use strict';\r\n\r\n  /*istanbul ignore next:cant test*/\r\n  if (typeof module === 'object' && typeof module.exports === 'object') {\r\n    module.exports = factory();\r\n  } else if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else {\r\n    // Browser globals\r\n    root.objectPath = factory();\r\n  }\r\n})(this, function(){\r\n  'use strict';\r\n\r\n  var\r\n    toStr = Object.prototype.toString,\r\n    _hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n  function isEmpty(value){\r\n    if (!value) {\r\n      return true;\r\n    }\r\n    if (isArray(value) && value.length === 0) {\r\n      return true;\r\n    } else {\r\n      for (var i in value) {\r\n        if (_hasOwnProperty.call(value, i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function toString(type){\r\n    return toStr.call(type);\r\n  }\r\n\r\n  function isNumber(value){\r\n    return typeof value === 'number' || toString(value) === \"[object Number]\";\r\n  }\r\n\r\n  function isString(obj){\r\n    return typeof obj === 'string' || toString(obj) === \"[object String]\";\r\n  }\r\n\r\n  function isObject(obj){\r\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\r\n  }\r\n\r\n  function isArray(obj){\r\n    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';\r\n  }\r\n\r\n  function isBoolean(obj){\r\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\r\n  }\r\n\r\n  function getKey(key){\r\n    var intKey = parseInt(key);\r\n    if (intKey.toString() === key) {\r\n      return intKey;\r\n    }\r\n    return key;\r\n  }\r\n\r\n  function set(obj, path, value, doNotReplace){\r\n    if (isNumber(path)) {\r\n      path = [path];\r\n    }\r\n    if (isEmpty(path)) {\r\n      return obj;\r\n    }\r\n    if (isString(path)) {\r\n      return set(obj, path.split('.'), value, doNotReplace);\r\n    }\r\n    var currentPath = getKey(path[0]);\r\n\r\n    if (path.length === 1) {\r\n      var oldVal = obj[currentPath];\r\n      if (oldVal === void 0 || !doNotReplace) {\r\n        obj[currentPath] = value;\r\n      }\r\n      return oldVal;\r\n    }\r\n\r\n    if (obj[currentPath] === void 0) {\r\n      if (isNumber(currentPath)) {\r\n        obj[currentPath] = [];\r\n      } else {\r\n        obj[currentPath] = {};\r\n      }\r\n    }\r\n\r\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\r\n  }\r\n\r\n  function del(obj, path) {\r\n    if (isNumber(path)) {\r\n      path = [path];\r\n    }\r\n\r\n    if (isEmpty(obj)) {\r\n      return void 0;\r\n    }\r\n\r\n    if (isEmpty(path)) {\r\n      return obj;\r\n    }\r\n    if(isString(path)) {\r\n      return del(obj, path.split('.'));\r\n    }\r\n\r\n    var currentPath = getKey(path[0]);\r\n    var oldVal = obj[currentPath];\r\n\r\n    if(path.length === 1) {\r\n      if (oldVal !== void 0) {\r\n        if (isArray(obj)) {\r\n          obj.splice(currentPath, 1);\r\n        } else {\r\n          delete obj[currentPath];\r\n        }\r\n      }\r\n    } else {\r\n      if (obj[currentPath] !== void 0) {\r\n        return del(obj[currentPath], path.slice(1));\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  var objectPath = {};\r\n\r\n  objectPath.ensureExists = function (obj, path, value){\r\n    return set(obj, path, value, true);\r\n  };\r\n\r\n  objectPath.set = function (obj, path, value, doNotReplace){\r\n    return set(obj, path, value, doNotReplace);\r\n  };\r\n\r\n  objectPath.insert = function (obj, path, value, at){\r\n    var arr = objectPath.get(obj, path);\r\n    at = ~~at;\r\n    if (!isArray(arr)) {\r\n      arr = [];\r\n      objectPath.set(obj, path, arr);\r\n    }\r\n    arr.splice(at, 0, value);\r\n  };\r\n\r\n  objectPath.empty = function(obj, path) {\r\n    if (isEmpty(path)) {\r\n      return obj;\r\n    }\r\n    if (isEmpty(obj)) {\r\n      return void 0;\r\n    }\r\n\r\n    var value, i;\r\n    if (!(value = objectPath.get(obj, path))) {\r\n      return obj;\r\n    }\r\n\r\n    if (isString(value)) {\r\n      return objectPath.set(obj, path, '');\r\n    } else if (isBoolean(value)) {\r\n      return objectPath.set(obj, path, false);\r\n    } else if (isNumber(value)) {\r\n      return objectPath.set(obj, path, 0);\r\n    } else if (isArray(value)) {\r\n      value.length = 0;\r\n    } else if (isObject(value)) {\r\n      for (i in value) {\r\n        if (_hasOwnProperty.call(value, i)) {\r\n          delete value[i];\r\n        }\r\n      }\r\n    } else {\r\n      return objectPath.set(obj, path, null);\r\n    }\r\n  };\r\n\r\n  objectPath.push = function (obj, path /*, values */){\r\n    var arr = objectPath.get(obj, path);\r\n    if (!isArray(arr)) {\r\n      arr = [];\r\n      objectPath.set(obj, path, arr);\r\n    }\r\n\r\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\r\n  };\r\n\r\n  objectPath.coalesce = function (obj, paths, defaultValue) {\r\n    var value;\r\n\r\n    for (var i = 0, len = paths.length; i < len; i++) {\r\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\r\n        return value;\r\n      }\r\n    }\r\n\r\n    return defaultValue;\r\n  };\r\n\r\n  objectPath.get = function (obj, path, defaultValue){\r\n    if (isNumber(path)) {\r\n      path = [path];\r\n    }\r\n    if (isEmpty(path)) {\r\n      return obj;\r\n    }\r\n    if (isEmpty(obj)) {\r\n      return defaultValue;\r\n    }\r\n    if (isString(path)) {\r\n      return objectPath.get(obj, path.split('.'), defaultValue);\r\n    }\r\n\r\n    var currentPath = getKey(path[0]);\r\n\r\n    if (path.length === 1) {\r\n      if (obj[currentPath] === void 0) {\r\n        return defaultValue;\r\n      }\r\n      return obj[currentPath];\r\n    }\r\n\r\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\r\n  };\r\n\r\n  objectPath.del = function(obj, path) {\r\n    return del(obj, path);\r\n  };\r\n\r\n  return objectPath;\r\n});", "var objectPath = require('object-path');\r\nvar sortBy;\r\nvar sort;\r\nvar type;\r\n\r\n/**\r\n * Filters args based on their type\r\n * @param  {String} type Type of property to filter by\r\n * @return {Function}\r\n */\r\ntype = function(type) {\r\n    return function(arg) {\r\n        return typeof arg === type;\r\n    };\r\n};\r\n\r\n/**\r\n * Return a comparator function\r\n * @param  {String} property The key to sort by\r\n * @param  {Function} map Function to apply to each property\r\n * @return {Function}        Returns the comparator function\r\n */\r\nsort = function sort(property, map) {\r\n    var sortOrder = 1;\r\n    var apply = map || function(_, value) { return value };\r\n\r\n    if (property[0] === \"-\") {\r\n        sortOrder = -1;\r\n        property = property.substr(1);\r\n    }\r\n\r\n    return function fn(a,b) {\r\n        var result;\r\n        var am = apply(property, objectPath.get(a, property));\r\n        var bm = apply(property, objectPath.get(b, property));\r\n        if (am < bm) result = -1;\r\n        if (am > bm) result = 1;\r\n        if (am === bm) result = 0;\r\n        return result * sortOrder;\r\n    }\r\n};\r\n\r\n/**\r\n * Return a comparator function that sorts by multiple keys\r\n * @return {Function} Returns the comparator function\r\n */\r\nsortBy = function sortBy() {\r\n\r\n    var args = Array.prototype.slice.call(arguments);\r\n    var properties = args.filter(type('string'));\r\n    var map = args.filter(type('function'))[0];\r\n\r\n    return function fn(obj1, obj2) {\r\n        var numberOfProperties = properties.length,\r\n            result = 0,\r\n            i = 0;\r\n\r\n        /* try getting a different result from 0 (equal)\r\n         * as long as we have extra properties to compare\r\n         */\r\n        while(result === 0 && i < numberOfProperties) {\r\n            result = sort(properties[i], map)(obj1, obj2);\r\n            i++;\r\n        }\r\n        return result;\r\n    };\r\n};\r\n\r\n/**\r\n * Expose `sortBy`\r\n * @type {Function}\r\n */\r\nmodule.exports = sortBy;"],
  "mappings": "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",
  "names": ["type", "sort", "sortBy"]
}
